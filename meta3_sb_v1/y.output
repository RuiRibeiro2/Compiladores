Terminals unused in grammar

    UNARY
    RESERVED


Grammar

    0 $accept: Program $end

    1 Program: PACKAGE ID SEMICOLON Declarations

    2 Declarations: Declarations2
    3             | ε

    4 Declarations2: Declarations2 VarDeclaration SEMICOLON
    5              | VarDeclaration SEMICOLON
    6              | Declarations2 FuncDeclaration SEMICOLON
    7              | FuncDeclaration SEMICOLON

    8 VarDeclaration: VAR VarSpec
    9               | VAR LPAR VarSpec SEMICOLON RPAR

   10 VarSpec: ID Type
   11        | ID VarSpecList Type

   12 VarSpecList: COMMA ID VarSpecList
   13            | COMMA ID

   14 Type: INT
   15     | FLOAT32
   16     | BOOL
   17     | STRING

   18 FuncDeclaration: FUNC ID LPAR Parameters RPAR Type FuncBody
   19                | FUNC ID LPAR Parameters RPAR FuncBody
   20                | FUNC ID LPAR RPAR Type FuncBody
   21                | FUNC ID LPAR RPAR FuncBody

   22 Parameters: ID Type ParametersList
   23           | ID Type

   24 ParametersList: COMMA ID Type ParametersList
   25               | COMMA ID Type

   26 FuncBody: LBRACE VarsAndStatements RBRACE

   27 VarsAndStatements: VarsAndStatements VarDeclaration SEMICOLON
   28                  | VarsAndStatements Statement SEMICOLON
   29                  | VarsAndStatements SEMICOLON
   30                  | ε

   31 Statement: ID ASSIGN Expr
   32          | LBRACE RBRACE
   33          | LBRACE StatementList RBRACE
   34          | IF Expr LBRACE RBRACE
   35          | IF Expr LBRACE StatementList RBRACE
   36          | IF Expr LBRACE RBRACE ELSE LBRACE RBRACE
   37          | IF Expr LBRACE StatementList RBRACE ELSE LBRACE RBRACE
   38          | IF Expr LBRACE RBRACE ELSE LBRACE StatementList RBRACE
   39          | IF Expr LBRACE StatementList RBRACE ELSE LBRACE StatementList RBRACE
   40          | FOR LBRACE RBRACE
   41          | FOR LBRACE StatementList RBRACE
   42          | FOR Expr LBRACE RBRACE
   43          | FOR Expr LBRACE StatementList RBRACE
   44          | RETURN
   45          | RETURN Expr
   46          | FuncInvocation
   47          | ParseArgs
   48          | PRINT LPAR Expr RPAR
   49          | PRINT LPAR STRLIT RPAR
   50          | error

   51 StatementList: StatementList Statement SEMICOLON
   52              | Statement SEMICOLON

   53 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   54          | ID COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR

   55 FuncID: ID

   56 FuncInvocation: FuncID LPAR RPAR
   57               | FuncID LPAR Expr RPAR
   58               | FuncID LPAR Expr CommaExpressionList RPAR
   59               | FuncID LPAR error RPAR

   60 CommaExpressionList: CommaExpressionList COMMA Expr
   61                    | COMMA Expr

   62 Expr: Expr OR Expr
   63     | Expr AND Expr
   64     | Expr LT Expr
   65     | Expr GT Expr
   66     | Expr EQ Expr
   67     | Expr NE Expr
   68     | Expr LE Expr
   69     | Expr GE Expr
   70     | Expr PLUS Expr
   71     | Expr MINUS Expr
   72     | Expr STAR Expr
   73     | Expr DIV Expr
   74     | Expr MOD Expr
   75     | NOT Expr
   76     | MINUS Expr
   77     | PLUS Expr
   78     | INTLIT
   79     | REALLIT
   80     | ID
   81     | FuncInvocation
   82     | LPAR Expr RPAR
   83     | LPAR error RPAR


Terminals, with rules where they appear

    $end (0) 0
    error (256) 50 54 59 83
    SEMICOLON (258) 1 4 5 6 7 9 27 28 29 51 52
    COMMA (259) 12 13 24 25 53 54 60 61
    BLANKID (260) 53 54
    ASSIGN (261) 31 53 54
    STAR (262) 72
    DIV (263) 73
    MINUS (264) 71 76
    PLUS (265) 70 77
    EQ (266) 66
    GE (267) 69
    GT (268) 65
    LE (269) 68
    LT (270) 64
    MOD (271) 74
    NE (272) 67
    NOT (273) 75
    AND (274) 63
    OR (275) 62
    LBRACE (276) 26 32 33 34 35 36 37 38 39 40 41 42 43
    RBRACE (277) 26 32 33 34 35 36 37 38 39 40 41 42 43
    LPAR (278) 9 18 19 20 21 48 49 53 54 56 57 58 59 82 83
    RPAR (279) 9 18 19 20 21 48 49 53 54 56 57 58 59 82 83
    LSQ (280) 53
    RSQ (281) 53
    PACKAGE (282) 1
    RETURN (283) 44 45
    PRINT (284) 48 49
    PARSEINT (285) 53 54
    FUNC (286) 18 19 20 21
    CMDARGS (287) 53
    VAR (288) 8 9
    IF (289) 34 35 36 37 38 39
    ELSE (290) 36 37 38 39
    FOR (291) 40 41 42 43
    INT (292) 14
    FLOAT32 (293) 15
    BOOL (294) 16
    STRING (295) 17
    UNARY (296)
    ID <value> (297) 1 10 11 12 13 18 19 20 21 22 23 24 25 31 53 54 55 80
    STRLIT <value> (298) 49
    INTLIT <value> (299) 78
    REALLIT <value> (300) 79
    RESERVED <value> (301)


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    Program <node> (48)
        on left: 1
        on right: 0
    Declarations <node> (49)
        on left: 2 3
        on right: 1
    Declarations2 <node> (50)
        on left: 4 5 6 7
        on right: 2 4 6
    VarDeclaration <node> (51)
        on left: 8 9
        on right: 4 5 27
    VarSpec <node> (52)
        on left: 10 11
        on right: 8 9
    VarSpecList <node> (53)
        on left: 12 13
        on right: 11 12
    Type <node> (54)
        on left: 14 15 16 17
        on right: 10 11 18 20 22 23 24 25
    FuncDeclaration <node> (55)
        on left: 18 19 20 21
        on right: 6 7
    Parameters <node> (56)
        on left: 22 23
        on right: 18 19
    ParametersList <node> (57)
        on left: 24 25
        on right: 22 24
    FuncBody <node> (58)
        on left: 26
        on right: 18 19 20 21
    VarsAndStatements <node> (59)
        on left: 27 28 29 30
        on right: 26 27 28 29
    Statement <node> (60)
        on left: 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50
        on right: 28 51 52
    StatementList <node> (61)
        on left: 51 52
        on right: 33 35 37 38 39 41 43 51
    ParseArgs <node> (62)
        on left: 53 54
        on right: 47
    FuncID <node> (63)
        on left: 55
        on right: 56 57 58 59
    FuncInvocation <node> (64)
        on left: 56 57 58 59
        on right: 46 81
    CommaExpressionList <node> (65)
        on left: 60 61
        on right: 58 60
    Expr <node> (66)
        on left: 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83
        on right: 31 34 35 36 37 38 39 42 43 45 48 53 57 58 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 82


State 0

    0 $accept: • Program $end

    PACKAGE  shift, and go to state 1

    Program  go to state 2


State 1

    1 Program: PACKAGE • ID SEMICOLON Declarations

    ID  shift, and go to state 3


State 2

    0 $accept: Program • $end

    $end  shift, and go to state 4


State 3

    1 Program: PACKAGE ID • SEMICOLON Declarations

    SEMICOLON  shift, and go to state 5


State 4

    0 $accept: Program $end •

    $default  accept


State 5

    1 Program: PACKAGE ID SEMICOLON • Declarations

    FUNC  shift, and go to state 6
    VAR   shift, and go to state 7

    $default  reduce using rule 3 (Declarations)

    Declarations     go to state 8
    Declarations2    go to state 9
    VarDeclaration   go to state 10
    FuncDeclaration  go to state 11


State 6

   18 FuncDeclaration: FUNC • ID LPAR Parameters RPAR Type FuncBody
   19                | FUNC • ID LPAR Parameters RPAR FuncBody
   20                | FUNC • ID LPAR RPAR Type FuncBody
   21                | FUNC • ID LPAR RPAR FuncBody

    ID  shift, and go to state 12


State 7

    8 VarDeclaration: VAR • VarSpec
    9               | VAR • LPAR VarSpec SEMICOLON RPAR

    LPAR  shift, and go to state 13
    ID    shift, and go to state 14

    VarSpec  go to state 15


State 8

    1 Program: PACKAGE ID SEMICOLON Declarations •

    $default  reduce using rule 1 (Program)


State 9

    2 Declarations: Declarations2 •
    4 Declarations2: Declarations2 • VarDeclaration SEMICOLON
    6              | Declarations2 • FuncDeclaration SEMICOLON

    FUNC  shift, and go to state 6
    VAR   shift, and go to state 7

    $default  reduce using rule 2 (Declarations)

    VarDeclaration   go to state 16
    FuncDeclaration  go to state 17


State 10

    5 Declarations2: VarDeclaration • SEMICOLON

    SEMICOLON  shift, and go to state 18


State 11

    7 Declarations2: FuncDeclaration • SEMICOLON

    SEMICOLON  shift, and go to state 19


State 12

   18 FuncDeclaration: FUNC ID • LPAR Parameters RPAR Type FuncBody
   19                | FUNC ID • LPAR Parameters RPAR FuncBody
   20                | FUNC ID • LPAR RPAR Type FuncBody
   21                | FUNC ID • LPAR RPAR FuncBody

    LPAR  shift, and go to state 20


State 13

    9 VarDeclaration: VAR LPAR • VarSpec SEMICOLON RPAR

    ID  shift, and go to state 14

    VarSpec  go to state 21


State 14

   10 VarSpec: ID • Type
   11        | ID • VarSpecList Type

    COMMA    shift, and go to state 22
    INT      shift, and go to state 23
    FLOAT32  shift, and go to state 24
    BOOL     shift, and go to state 25
    STRING   shift, and go to state 26

    VarSpecList  go to state 27
    Type         go to state 28


State 15

    8 VarDeclaration: VAR VarSpec •

    $default  reduce using rule 8 (VarDeclaration)


State 16

    4 Declarations2: Declarations2 VarDeclaration • SEMICOLON

    SEMICOLON  shift, and go to state 29


State 17

    6 Declarations2: Declarations2 FuncDeclaration • SEMICOLON

    SEMICOLON  shift, and go to state 30


State 18

    5 Declarations2: VarDeclaration SEMICOLON •

    $default  reduce using rule 5 (Declarations2)


State 19

    7 Declarations2: FuncDeclaration SEMICOLON •

    $default  reduce using rule 7 (Declarations2)


State 20

   18 FuncDeclaration: FUNC ID LPAR • Parameters RPAR Type FuncBody
   19                | FUNC ID LPAR • Parameters RPAR FuncBody
   20                | FUNC ID LPAR • RPAR Type FuncBody
   21                | FUNC ID LPAR • RPAR FuncBody

    RPAR  shift, and go to state 31
    ID    shift, and go to state 32

    Parameters  go to state 33


State 21

    9 VarDeclaration: VAR LPAR VarSpec • SEMICOLON RPAR

    SEMICOLON  shift, and go to state 34


State 22

   12 VarSpecList: COMMA • ID VarSpecList
   13            | COMMA • ID

    ID  shift, and go to state 35


State 23

   14 Type: INT •

    $default  reduce using rule 14 (Type)


State 24

   15 Type: FLOAT32 •

    $default  reduce using rule 15 (Type)


State 25

   16 Type: BOOL •

    $default  reduce using rule 16 (Type)


State 26

   17 Type: STRING •

    $default  reduce using rule 17 (Type)


State 27

   11 VarSpec: ID VarSpecList • Type

    INT      shift, and go to state 23
    FLOAT32  shift, and go to state 24
    BOOL     shift, and go to state 25
    STRING   shift, and go to state 26

    Type  go to state 36


State 28

   10 VarSpec: ID Type •

    $default  reduce using rule 10 (VarSpec)


State 29

    4 Declarations2: Declarations2 VarDeclaration SEMICOLON •

    $default  reduce using rule 4 (Declarations2)


State 30

    6 Declarations2: Declarations2 FuncDeclaration SEMICOLON •

    $default  reduce using rule 6 (Declarations2)


State 31

   20 FuncDeclaration: FUNC ID LPAR RPAR • Type FuncBody
   21                | FUNC ID LPAR RPAR • FuncBody

    LBRACE   shift, and go to state 37
    INT      shift, and go to state 23
    FLOAT32  shift, and go to state 24
    BOOL     shift, and go to state 25
    STRING   shift, and go to state 26

    Type      go to state 38
    FuncBody  go to state 39


State 32

   22 Parameters: ID • Type ParametersList
   23           | ID • Type

    INT      shift, and go to state 23
    FLOAT32  shift, and go to state 24
    BOOL     shift, and go to state 25
    STRING   shift, and go to state 26

    Type  go to state 40


State 33

   18 FuncDeclaration: FUNC ID LPAR Parameters • RPAR Type FuncBody
   19                | FUNC ID LPAR Parameters • RPAR FuncBody

    RPAR  shift, and go to state 41


State 34

    9 VarDeclaration: VAR LPAR VarSpec SEMICOLON • RPAR

    RPAR  shift, and go to state 42


State 35

   12 VarSpecList: COMMA ID • VarSpecList
   13            | COMMA ID •

    COMMA  shift, and go to state 22

    $default  reduce using rule 13 (VarSpecList)

    VarSpecList  go to state 43


State 36

   11 VarSpec: ID VarSpecList Type •

    $default  reduce using rule 11 (VarSpec)


State 37

   26 FuncBody: LBRACE • VarsAndStatements RBRACE

    $default  reduce using rule 30 (VarsAndStatements)

    VarsAndStatements  go to state 44


State 38

   20 FuncDeclaration: FUNC ID LPAR RPAR Type • FuncBody

    LBRACE  shift, and go to state 37

    FuncBody  go to state 45


State 39

   21 FuncDeclaration: FUNC ID LPAR RPAR FuncBody •

    $default  reduce using rule 21 (FuncDeclaration)


State 40

   22 Parameters: ID Type • ParametersList
   23           | ID Type •

    COMMA  shift, and go to state 46

    $default  reduce using rule 23 (Parameters)

    ParametersList  go to state 47


State 41

   18 FuncDeclaration: FUNC ID LPAR Parameters RPAR • Type FuncBody
   19                | FUNC ID LPAR Parameters RPAR • FuncBody

    LBRACE   shift, and go to state 37
    INT      shift, and go to state 23
    FLOAT32  shift, and go to state 24
    BOOL     shift, and go to state 25
    STRING   shift, and go to state 26

    Type      go to state 48
    FuncBody  go to state 49


State 42

    9 VarDeclaration: VAR LPAR VarSpec SEMICOLON RPAR •

    $default  reduce using rule 9 (VarDeclaration)


State 43

   12 VarSpecList: COMMA ID VarSpecList •

    $default  reduce using rule 12 (VarSpecList)


State 44

   26 FuncBody: LBRACE VarsAndStatements • RBRACE
   27 VarsAndStatements: VarsAndStatements • VarDeclaration SEMICOLON
   28                  | VarsAndStatements • Statement SEMICOLON
   29                  | VarsAndStatements • SEMICOLON

    error      shift, and go to state 50
    SEMICOLON  shift, and go to state 51
    LBRACE     shift, and go to state 52
    RBRACE     shift, and go to state 53
    RETURN     shift, and go to state 54
    PRINT      shift, and go to state 55
    VAR        shift, and go to state 7
    IF         shift, and go to state 56
    FOR        shift, and go to state 57
    ID         shift, and go to state 58

    VarDeclaration  go to state 59
    Statement       go to state 60
    ParseArgs       go to state 61
    FuncID          go to state 62
    FuncInvocation  go to state 63


State 45

   20 FuncDeclaration: FUNC ID LPAR RPAR Type FuncBody •

    $default  reduce using rule 20 (FuncDeclaration)


State 46

   24 ParametersList: COMMA • ID Type ParametersList
   25               | COMMA • ID Type

    ID  shift, and go to state 64


State 47

   22 Parameters: ID Type ParametersList •

    $default  reduce using rule 22 (Parameters)


State 48

   18 FuncDeclaration: FUNC ID LPAR Parameters RPAR Type • FuncBody

    LBRACE  shift, and go to state 37

    FuncBody  go to state 65


State 49

   19 FuncDeclaration: FUNC ID LPAR Parameters RPAR FuncBody •

    $default  reduce using rule 19 (FuncDeclaration)


State 50

   50 Statement: error •

    $default  reduce using rule 50 (Statement)


State 51

   29 VarsAndStatements: VarsAndStatements SEMICOLON •

    $default  reduce using rule 29 (VarsAndStatements)


State 52

   32 Statement: LBRACE • RBRACE
   33          | LBRACE • StatementList RBRACE

    error   shift, and go to state 50
    LBRACE  shift, and go to state 52
    RBRACE  shift, and go to state 66
    RETURN  shift, and go to state 54
    PRINT   shift, and go to state 55
    IF      shift, and go to state 56
    FOR     shift, and go to state 57
    ID      shift, and go to state 58

    Statement       go to state 67
    StatementList   go to state 68
    ParseArgs       go to state 61
    FuncID          go to state 62
    FuncInvocation  go to state 63


State 53

   26 FuncBody: LBRACE VarsAndStatements RBRACE •

    $default  reduce using rule 26 (FuncBody)


State 54

   44 Statement: RETURN •
   45          | RETURN • Expr

    MINUS    shift, and go to state 69
    PLUS     shift, and go to state 70
    NOT      shift, and go to state 71
    LPAR     shift, and go to state 72
    ID       shift, and go to state 73
    INTLIT   shift, and go to state 74
    REALLIT  shift, and go to state 75

    $default  reduce using rule 44 (Statement)

    FuncID          go to state 62
    FuncInvocation  go to state 76
    Expr            go to state 77


State 55

   48 Statement: PRINT • LPAR Expr RPAR
   49          | PRINT • LPAR STRLIT RPAR

    LPAR  shift, and go to state 78


State 56

   34 Statement: IF • Expr LBRACE RBRACE
   35          | IF • Expr LBRACE StatementList RBRACE
   36          | IF • Expr LBRACE RBRACE ELSE LBRACE RBRACE
   37          | IF • Expr LBRACE StatementList RBRACE ELSE LBRACE RBRACE
   38          | IF • Expr LBRACE RBRACE ELSE LBRACE StatementList RBRACE
   39          | IF • Expr LBRACE StatementList RBRACE ELSE LBRACE StatementList RBRACE

    MINUS    shift, and go to state 69
    PLUS     shift, and go to state 70
    NOT      shift, and go to state 71
    LPAR     shift, and go to state 72
    ID       shift, and go to state 73
    INTLIT   shift, and go to state 74
    REALLIT  shift, and go to state 75

    FuncID          go to state 62
    FuncInvocation  go to state 76
    Expr            go to state 79


State 57

   40 Statement: FOR • LBRACE RBRACE
   41          | FOR • LBRACE StatementList RBRACE
   42          | FOR • Expr LBRACE RBRACE
   43          | FOR • Expr LBRACE StatementList RBRACE

    MINUS    shift, and go to state 69
    PLUS     shift, and go to state 70
    NOT      shift, and go to state 71
    LBRACE   shift, and go to state 80
    LPAR     shift, and go to state 72
    ID       shift, and go to state 73
    INTLIT   shift, and go to state 74
    REALLIT  shift, and go to state 75

    FuncID          go to state 62
    FuncInvocation  go to state 76
    Expr            go to state 81


State 58

   31 Statement: ID • ASSIGN Expr
   53 ParseArgs: ID • COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   54          | ID • COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR
   55 FuncID: ID •

    COMMA   shift, and go to state 82
    ASSIGN  shift, and go to state 83

    $default  reduce using rule 55 (FuncID)


State 59

   27 VarsAndStatements: VarsAndStatements VarDeclaration • SEMICOLON

    SEMICOLON  shift, and go to state 84


State 60

   28 VarsAndStatements: VarsAndStatements Statement • SEMICOLON

    SEMICOLON  shift, and go to state 85


State 61

   47 Statement: ParseArgs •

    $default  reduce using rule 47 (Statement)


State 62

   56 FuncInvocation: FuncID • LPAR RPAR
   57               | FuncID • LPAR Expr RPAR
   58               | FuncID • LPAR Expr CommaExpressionList RPAR
   59               | FuncID • LPAR error RPAR

    LPAR  shift, and go to state 86


State 63

   46 Statement: FuncInvocation •

    $default  reduce using rule 46 (Statement)


State 64

   24 ParametersList: COMMA ID • Type ParametersList
   25               | COMMA ID • Type

    INT      shift, and go to state 23
    FLOAT32  shift, and go to state 24
    BOOL     shift, and go to state 25
    STRING   shift, and go to state 26

    Type  go to state 87


State 65

   18 FuncDeclaration: FUNC ID LPAR Parameters RPAR Type FuncBody •

    $default  reduce using rule 18 (FuncDeclaration)


State 66

   32 Statement: LBRACE RBRACE •

    $default  reduce using rule 32 (Statement)


State 67

   52 StatementList: Statement • SEMICOLON

    SEMICOLON  shift, and go to state 88


State 68

   33 Statement: LBRACE StatementList • RBRACE
   51 StatementList: StatementList • Statement SEMICOLON

    error   shift, and go to state 50
    LBRACE  shift, and go to state 52
    RBRACE  shift, and go to state 89
    RETURN  shift, and go to state 54
    PRINT   shift, and go to state 55
    IF      shift, and go to state 56
    FOR     shift, and go to state 57
    ID      shift, and go to state 58

    Statement       go to state 90
    ParseArgs       go to state 61
    FuncID          go to state 62
    FuncInvocation  go to state 63


State 69

   76 Expr: MINUS • Expr

    MINUS    shift, and go to state 69
    PLUS     shift, and go to state 70
    NOT      shift, and go to state 71
    LPAR     shift, and go to state 72
    ID       shift, and go to state 73
    INTLIT   shift, and go to state 74
    REALLIT  shift, and go to state 75

    FuncID          go to state 62
    FuncInvocation  go to state 76
    Expr            go to state 91


State 70

   77 Expr: PLUS • Expr

    MINUS    shift, and go to state 69
    PLUS     shift, and go to state 70
    NOT      shift, and go to state 71
    LPAR     shift, and go to state 72
    ID       shift, and go to state 73
    INTLIT   shift, and go to state 74
    REALLIT  shift, and go to state 75

    FuncID          go to state 62
    FuncInvocation  go to state 76
    Expr            go to state 92


State 71

   75 Expr: NOT • Expr

    MINUS    shift, and go to state 69
    PLUS     shift, and go to state 70
    NOT      shift, and go to state 71
    LPAR     shift, and go to state 72
    ID       shift, and go to state 73
    INTLIT   shift, and go to state 74
    REALLIT  shift, and go to state 75

    FuncID          go to state 62
    FuncInvocation  go to state 76
    Expr            go to state 93


State 72

   82 Expr: LPAR • Expr RPAR
   83     | LPAR • error RPAR

    error    shift, and go to state 94
    MINUS    shift, and go to state 69
    PLUS     shift, and go to state 70
    NOT      shift, and go to state 71
    LPAR     shift, and go to state 72
    ID       shift, and go to state 73
    INTLIT   shift, and go to state 74
    REALLIT  shift, and go to state 75

    FuncID          go to state 62
    FuncInvocation  go to state 76
    Expr            go to state 95


State 73

   55 FuncID: ID •
   80 Expr: ID •

    LPAR      reduce using rule 55 (FuncID)
    $default  reduce using rule 80 (Expr)


State 74

   78 Expr: INTLIT •

    $default  reduce using rule 78 (Expr)


State 75

   79 Expr: REALLIT •

    $default  reduce using rule 79 (Expr)


State 76

   81 Expr: FuncInvocation •

    $default  reduce using rule 81 (Expr)


State 77

   45 Statement: RETURN Expr •
   62 Expr: Expr • OR Expr
   63     | Expr • AND Expr
   64     | Expr • LT Expr
   65     | Expr • GT Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • LE Expr
   69     | Expr • GE Expr
   70     | Expr • PLUS Expr
   71     | Expr • MINUS Expr
   72     | Expr • STAR Expr
   73     | Expr • DIV Expr
   74     | Expr • MOD Expr

    STAR   shift, and go to state 96
    DIV    shift, and go to state 97
    MINUS  shift, and go to state 98
    PLUS   shift, and go to state 99
    EQ     shift, and go to state 100
    GE     shift, and go to state 101
    GT     shift, and go to state 102
    LE     shift, and go to state 103
    LT     shift, and go to state 104
    MOD    shift, and go to state 105
    NE     shift, and go to state 106
    AND    shift, and go to state 107
    OR     shift, and go to state 108

    $default  reduce using rule 45 (Statement)


State 78

   48 Statement: PRINT LPAR • Expr RPAR
   49          | PRINT LPAR • STRLIT RPAR

    MINUS    shift, and go to state 69
    PLUS     shift, and go to state 70
    NOT      shift, and go to state 71
    LPAR     shift, and go to state 72
    ID       shift, and go to state 73
    STRLIT   shift, and go to state 109
    INTLIT   shift, and go to state 74
    REALLIT  shift, and go to state 75

    FuncID          go to state 62
    FuncInvocation  go to state 76
    Expr            go to state 110


State 79

   34 Statement: IF Expr • LBRACE RBRACE
   35          | IF Expr • LBRACE StatementList RBRACE
   36          | IF Expr • LBRACE RBRACE ELSE LBRACE RBRACE
   37          | IF Expr • LBRACE StatementList RBRACE ELSE LBRACE RBRACE
   38          | IF Expr • LBRACE RBRACE ELSE LBRACE StatementList RBRACE
   39          | IF Expr • LBRACE StatementList RBRACE ELSE LBRACE StatementList RBRACE
   62 Expr: Expr • OR Expr
   63     | Expr • AND Expr
   64     | Expr • LT Expr
   65     | Expr • GT Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • LE Expr
   69     | Expr • GE Expr
   70     | Expr • PLUS Expr
   71     | Expr • MINUS Expr
   72     | Expr • STAR Expr
   73     | Expr • DIV Expr
   74     | Expr • MOD Expr

    STAR    shift, and go to state 96
    DIV     shift, and go to state 97
    MINUS   shift, and go to state 98
    PLUS    shift, and go to state 99
    EQ      shift, and go to state 100
    GE      shift, and go to state 101
    GT      shift, and go to state 102
    LE      shift, and go to state 103
    LT      shift, and go to state 104
    MOD     shift, and go to state 105
    NE      shift, and go to state 106
    AND     shift, and go to state 107
    OR      shift, and go to state 108
    LBRACE  shift, and go to state 111


State 80

   40 Statement: FOR LBRACE • RBRACE
   41          | FOR LBRACE • StatementList RBRACE

    error   shift, and go to state 50
    LBRACE  shift, and go to state 52
    RBRACE  shift, and go to state 112
    RETURN  shift, and go to state 54
    PRINT   shift, and go to state 55
    IF      shift, and go to state 56
    FOR     shift, and go to state 57
    ID      shift, and go to state 58

    Statement       go to state 67
    StatementList   go to state 113
    ParseArgs       go to state 61
    FuncID          go to state 62
    FuncInvocation  go to state 63


State 81

   42 Statement: FOR Expr • LBRACE RBRACE
   43          | FOR Expr • LBRACE StatementList RBRACE
   62 Expr: Expr • OR Expr
   63     | Expr • AND Expr
   64     | Expr • LT Expr
   65     | Expr • GT Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • LE Expr
   69     | Expr • GE Expr
   70     | Expr • PLUS Expr
   71     | Expr • MINUS Expr
   72     | Expr • STAR Expr
   73     | Expr • DIV Expr
   74     | Expr • MOD Expr

    STAR    shift, and go to state 96
    DIV     shift, and go to state 97
    MINUS   shift, and go to state 98
    PLUS    shift, and go to state 99
    EQ      shift, and go to state 100
    GE      shift, and go to state 101
    GT      shift, and go to state 102
    LE      shift, and go to state 103
    LT      shift, and go to state 104
    MOD     shift, and go to state 105
    NE      shift, and go to state 106
    AND     shift, and go to state 107
    OR      shift, and go to state 108
    LBRACE  shift, and go to state 114


State 82

   53 ParseArgs: ID COMMA • BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   54          | ID COMMA • BLANKID ASSIGN PARSEINT LPAR error RPAR

    BLANKID  shift, and go to state 115


State 83

   31 Statement: ID ASSIGN • Expr

    MINUS    shift, and go to state 69
    PLUS     shift, and go to state 70
    NOT      shift, and go to state 71
    LPAR     shift, and go to state 72
    ID       shift, and go to state 73
    INTLIT   shift, and go to state 74
    REALLIT  shift, and go to state 75

    FuncID          go to state 62
    FuncInvocation  go to state 76
    Expr            go to state 116


State 84

   27 VarsAndStatements: VarsAndStatements VarDeclaration SEMICOLON •

    $default  reduce using rule 27 (VarsAndStatements)


State 85

   28 VarsAndStatements: VarsAndStatements Statement SEMICOLON •

    $default  reduce using rule 28 (VarsAndStatements)


State 86

   56 FuncInvocation: FuncID LPAR • RPAR
   57               | FuncID LPAR • Expr RPAR
   58               | FuncID LPAR • Expr CommaExpressionList RPAR
   59               | FuncID LPAR • error RPAR

    error    shift, and go to state 117
    MINUS    shift, and go to state 69
    PLUS     shift, and go to state 70
    NOT      shift, and go to state 71
    LPAR     shift, and go to state 72
    RPAR     shift, and go to state 118
    ID       shift, and go to state 73
    INTLIT   shift, and go to state 74
    REALLIT  shift, and go to state 75

    FuncID          go to state 62
    FuncInvocation  go to state 76
    Expr            go to state 119


State 87

   24 ParametersList: COMMA ID Type • ParametersList
   25               | COMMA ID Type •

    COMMA  shift, and go to state 46

    $default  reduce using rule 25 (ParametersList)

    ParametersList  go to state 120


State 88

   52 StatementList: Statement SEMICOLON •

    $default  reduce using rule 52 (StatementList)


State 89

   33 Statement: LBRACE StatementList RBRACE •

    $default  reduce using rule 33 (Statement)


State 90

   51 StatementList: StatementList Statement • SEMICOLON

    SEMICOLON  shift, and go to state 121


State 91

   62 Expr: Expr • OR Expr
   63     | Expr • AND Expr
   64     | Expr • LT Expr
   65     | Expr • GT Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • LE Expr
   69     | Expr • GE Expr
   70     | Expr • PLUS Expr
   71     | Expr • MINUS Expr
   72     | Expr • STAR Expr
   73     | Expr • DIV Expr
   74     | Expr • MOD Expr
   76     | MINUS Expr •

    $default  reduce using rule 76 (Expr)


State 92

   62 Expr: Expr • OR Expr
   63     | Expr • AND Expr
   64     | Expr • LT Expr
   65     | Expr • GT Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • LE Expr
   69     | Expr • GE Expr
   70     | Expr • PLUS Expr
   71     | Expr • MINUS Expr
   72     | Expr • STAR Expr
   73     | Expr • DIV Expr
   74     | Expr • MOD Expr
   77     | PLUS Expr •

    $default  reduce using rule 77 (Expr)


State 93

   62 Expr: Expr • OR Expr
   63     | Expr • AND Expr
   64     | Expr • LT Expr
   65     | Expr • GT Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • LE Expr
   69     | Expr • GE Expr
   70     | Expr • PLUS Expr
   71     | Expr • MINUS Expr
   72     | Expr • STAR Expr
   73     | Expr • DIV Expr
   74     | Expr • MOD Expr
   75     | NOT Expr •

    $default  reduce using rule 75 (Expr)


State 94

   83 Expr: LPAR error • RPAR

    RPAR  shift, and go to state 122


State 95

   62 Expr: Expr • OR Expr
   63     | Expr • AND Expr
   64     | Expr • LT Expr
   65     | Expr • GT Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • LE Expr
   69     | Expr • GE Expr
   70     | Expr • PLUS Expr
   71     | Expr • MINUS Expr
   72     | Expr • STAR Expr
   73     | Expr • DIV Expr
   74     | Expr • MOD Expr
   82     | LPAR Expr • RPAR

    STAR   shift, and go to state 96
    DIV    shift, and go to state 97
    MINUS  shift, and go to state 98
    PLUS   shift, and go to state 99
    EQ     shift, and go to state 100
    GE     shift, and go to state 101
    GT     shift, and go to state 102
    LE     shift, and go to state 103
    LT     shift, and go to state 104
    MOD    shift, and go to state 105
    NE     shift, and go to state 106
    AND    shift, and go to state 107
    OR     shift, and go to state 108
    RPAR   shift, and go to state 123


State 96

   72 Expr: Expr STAR • Expr

    MINUS    shift, and go to state 69
    PLUS     shift, and go to state 70
    NOT      shift, and go to state 71
    LPAR     shift, and go to state 72
    ID       shift, and go to state 73
    INTLIT   shift, and go to state 74
    REALLIT  shift, and go to state 75

    FuncID          go to state 62
    FuncInvocation  go to state 76
    Expr            go to state 124


State 97

   73 Expr: Expr DIV • Expr

    MINUS    shift, and go to state 69
    PLUS     shift, and go to state 70
    NOT      shift, and go to state 71
    LPAR     shift, and go to state 72
    ID       shift, and go to state 73
    INTLIT   shift, and go to state 74
    REALLIT  shift, and go to state 75

    FuncID          go to state 62
    FuncInvocation  go to state 76
    Expr            go to state 125


State 98

   71 Expr: Expr MINUS • Expr

    MINUS    shift, and go to state 69
    PLUS     shift, and go to state 70
    NOT      shift, and go to state 71
    LPAR     shift, and go to state 72
    ID       shift, and go to state 73
    INTLIT   shift, and go to state 74
    REALLIT  shift, and go to state 75

    FuncID          go to state 62
    FuncInvocation  go to state 76
    Expr            go to state 126


State 99

   70 Expr: Expr PLUS • Expr

    MINUS    shift, and go to state 69
    PLUS     shift, and go to state 70
    NOT      shift, and go to state 71
    LPAR     shift, and go to state 72
    ID       shift, and go to state 73
    INTLIT   shift, and go to state 74
    REALLIT  shift, and go to state 75

    FuncID          go to state 62
    FuncInvocation  go to state 76
    Expr            go to state 127


State 100

   66 Expr: Expr EQ • Expr

    MINUS    shift, and go to state 69
    PLUS     shift, and go to state 70
    NOT      shift, and go to state 71
    LPAR     shift, and go to state 72
    ID       shift, and go to state 73
    INTLIT   shift, and go to state 74
    REALLIT  shift, and go to state 75

    FuncID          go to state 62
    FuncInvocation  go to state 76
    Expr            go to state 128


State 101

   69 Expr: Expr GE • Expr

    MINUS    shift, and go to state 69
    PLUS     shift, and go to state 70
    NOT      shift, and go to state 71
    LPAR     shift, and go to state 72
    ID       shift, and go to state 73
    INTLIT   shift, and go to state 74
    REALLIT  shift, and go to state 75

    FuncID          go to state 62
    FuncInvocation  go to state 76
    Expr            go to state 129


State 102

   65 Expr: Expr GT • Expr

    MINUS    shift, and go to state 69
    PLUS     shift, and go to state 70
    NOT      shift, and go to state 71
    LPAR     shift, and go to state 72
    ID       shift, and go to state 73
    INTLIT   shift, and go to state 74
    REALLIT  shift, and go to state 75

    FuncID          go to state 62
    FuncInvocation  go to state 76
    Expr            go to state 130


State 103

   68 Expr: Expr LE • Expr

    MINUS    shift, and go to state 69
    PLUS     shift, and go to state 70
    NOT      shift, and go to state 71
    LPAR     shift, and go to state 72
    ID       shift, and go to state 73
    INTLIT   shift, and go to state 74
    REALLIT  shift, and go to state 75

    FuncID          go to state 62
    FuncInvocation  go to state 76
    Expr            go to state 131


State 104

   64 Expr: Expr LT • Expr

    MINUS    shift, and go to state 69
    PLUS     shift, and go to state 70
    NOT      shift, and go to state 71
    LPAR     shift, and go to state 72
    ID       shift, and go to state 73
    INTLIT   shift, and go to state 74
    REALLIT  shift, and go to state 75

    FuncID          go to state 62
    FuncInvocation  go to state 76
    Expr            go to state 132


State 105

   74 Expr: Expr MOD • Expr

    MINUS    shift, and go to state 69
    PLUS     shift, and go to state 70
    NOT      shift, and go to state 71
    LPAR     shift, and go to state 72
    ID       shift, and go to state 73
    INTLIT   shift, and go to state 74
    REALLIT  shift, and go to state 75

    FuncID          go to state 62
    FuncInvocation  go to state 76
    Expr            go to state 133


State 106

   67 Expr: Expr NE • Expr

    MINUS    shift, and go to state 69
    PLUS     shift, and go to state 70
    NOT      shift, and go to state 71
    LPAR     shift, and go to state 72
    ID       shift, and go to state 73
    INTLIT   shift, and go to state 74
    REALLIT  shift, and go to state 75

    FuncID          go to state 62
    FuncInvocation  go to state 76
    Expr            go to state 134


State 107

   63 Expr: Expr AND • Expr

    MINUS    shift, and go to state 69
    PLUS     shift, and go to state 70
    NOT      shift, and go to state 71
    LPAR     shift, and go to state 72
    ID       shift, and go to state 73
    INTLIT   shift, and go to state 74
    REALLIT  shift, and go to state 75

    FuncID          go to state 62
    FuncInvocation  go to state 76
    Expr            go to state 135


State 108

   62 Expr: Expr OR • Expr

    MINUS    shift, and go to state 69
    PLUS     shift, and go to state 70
    NOT      shift, and go to state 71
    LPAR     shift, and go to state 72
    ID       shift, and go to state 73
    INTLIT   shift, and go to state 74
    REALLIT  shift, and go to state 75

    FuncID          go to state 62
    FuncInvocation  go to state 76
    Expr            go to state 136


State 109

   49 Statement: PRINT LPAR STRLIT • RPAR

    RPAR  shift, and go to state 137


State 110

   48 Statement: PRINT LPAR Expr • RPAR
   62 Expr: Expr • OR Expr
   63     | Expr • AND Expr
   64     | Expr • LT Expr
   65     | Expr • GT Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • LE Expr
   69     | Expr • GE Expr
   70     | Expr • PLUS Expr
   71     | Expr • MINUS Expr
   72     | Expr • STAR Expr
   73     | Expr • DIV Expr
   74     | Expr • MOD Expr

    STAR   shift, and go to state 96
    DIV    shift, and go to state 97
    MINUS  shift, and go to state 98
    PLUS   shift, and go to state 99
    EQ     shift, and go to state 100
    GE     shift, and go to state 101
    GT     shift, and go to state 102
    LE     shift, and go to state 103
    LT     shift, and go to state 104
    MOD    shift, and go to state 105
    NE     shift, and go to state 106
    AND    shift, and go to state 107
    OR     shift, and go to state 108
    RPAR   shift, and go to state 138


State 111

   34 Statement: IF Expr LBRACE • RBRACE
   35          | IF Expr LBRACE • StatementList RBRACE
   36          | IF Expr LBRACE • RBRACE ELSE LBRACE RBRACE
   37          | IF Expr LBRACE • StatementList RBRACE ELSE LBRACE RBRACE
   38          | IF Expr LBRACE • RBRACE ELSE LBRACE StatementList RBRACE
   39          | IF Expr LBRACE • StatementList RBRACE ELSE LBRACE StatementList RBRACE

    error   shift, and go to state 50
    LBRACE  shift, and go to state 52
    RBRACE  shift, and go to state 139
    RETURN  shift, and go to state 54
    PRINT   shift, and go to state 55
    IF      shift, and go to state 56
    FOR     shift, and go to state 57
    ID      shift, and go to state 58

    Statement       go to state 67
    StatementList   go to state 140
    ParseArgs       go to state 61
    FuncID          go to state 62
    FuncInvocation  go to state 63


State 112

   40 Statement: FOR LBRACE RBRACE •

    $default  reduce using rule 40 (Statement)


State 113

   41 Statement: FOR LBRACE StatementList • RBRACE
   51 StatementList: StatementList • Statement SEMICOLON

    error   shift, and go to state 50
    LBRACE  shift, and go to state 52
    RBRACE  shift, and go to state 141
    RETURN  shift, and go to state 54
    PRINT   shift, and go to state 55
    IF      shift, and go to state 56
    FOR     shift, and go to state 57
    ID      shift, and go to state 58

    Statement       go to state 90
    ParseArgs       go to state 61
    FuncID          go to state 62
    FuncInvocation  go to state 63


State 114

   42 Statement: FOR Expr LBRACE • RBRACE
   43          | FOR Expr LBRACE • StatementList RBRACE

    error   shift, and go to state 50
    LBRACE  shift, and go to state 52
    RBRACE  shift, and go to state 142
    RETURN  shift, and go to state 54
    PRINT   shift, and go to state 55
    IF      shift, and go to state 56
    FOR     shift, and go to state 57
    ID      shift, and go to state 58

    Statement       go to state 67
    StatementList   go to state 143
    ParseArgs       go to state 61
    FuncID          go to state 62
    FuncInvocation  go to state 63


State 115

   53 ParseArgs: ID COMMA BLANKID • ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   54          | ID COMMA BLANKID • ASSIGN PARSEINT LPAR error RPAR

    ASSIGN  shift, and go to state 144


State 116

   31 Statement: ID ASSIGN Expr •
   62 Expr: Expr • OR Expr
   63     | Expr • AND Expr
   64     | Expr • LT Expr
   65     | Expr • GT Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • LE Expr
   69     | Expr • GE Expr
   70     | Expr • PLUS Expr
   71     | Expr • MINUS Expr
   72     | Expr • STAR Expr
   73     | Expr • DIV Expr
   74     | Expr • MOD Expr

    STAR   shift, and go to state 96
    DIV    shift, and go to state 97
    MINUS  shift, and go to state 98
    PLUS   shift, and go to state 99
    EQ     shift, and go to state 100
    GE     shift, and go to state 101
    GT     shift, and go to state 102
    LE     shift, and go to state 103
    LT     shift, and go to state 104
    MOD    shift, and go to state 105
    NE     shift, and go to state 106
    AND    shift, and go to state 107
    OR     shift, and go to state 108

    $default  reduce using rule 31 (Statement)


State 117

   59 FuncInvocation: FuncID LPAR error • RPAR

    RPAR  shift, and go to state 145


State 118

   56 FuncInvocation: FuncID LPAR RPAR •

    $default  reduce using rule 56 (FuncInvocation)


State 119

   57 FuncInvocation: FuncID LPAR Expr • RPAR
   58               | FuncID LPAR Expr • CommaExpressionList RPAR
   62 Expr: Expr • OR Expr
   63     | Expr • AND Expr
   64     | Expr • LT Expr
   65     | Expr • GT Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • LE Expr
   69     | Expr • GE Expr
   70     | Expr • PLUS Expr
   71     | Expr • MINUS Expr
   72     | Expr • STAR Expr
   73     | Expr • DIV Expr
   74     | Expr • MOD Expr

    COMMA  shift, and go to state 146
    STAR   shift, and go to state 96
    DIV    shift, and go to state 97
    MINUS  shift, and go to state 98
    PLUS   shift, and go to state 99
    EQ     shift, and go to state 100
    GE     shift, and go to state 101
    GT     shift, and go to state 102
    LE     shift, and go to state 103
    LT     shift, and go to state 104
    MOD    shift, and go to state 105
    NE     shift, and go to state 106
    AND    shift, and go to state 107
    OR     shift, and go to state 108
    RPAR   shift, and go to state 147

    CommaExpressionList  go to state 148


State 120

   24 ParametersList: COMMA ID Type ParametersList •

    $default  reduce using rule 24 (ParametersList)


State 121

   51 StatementList: StatementList Statement SEMICOLON •

    $default  reduce using rule 51 (StatementList)


State 122

   83 Expr: LPAR error RPAR •

    $default  reduce using rule 83 (Expr)


State 123

   82 Expr: LPAR Expr RPAR •

    $default  reduce using rule 82 (Expr)


State 124

   62 Expr: Expr • OR Expr
   63     | Expr • AND Expr
   64     | Expr • LT Expr
   65     | Expr • GT Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • LE Expr
   69     | Expr • GE Expr
   70     | Expr • PLUS Expr
   71     | Expr • MINUS Expr
   72     | Expr • STAR Expr
   72     | Expr STAR Expr •
   73     | Expr • DIV Expr
   74     | Expr • MOD Expr

    $default  reduce using rule 72 (Expr)


State 125

   62 Expr: Expr • OR Expr
   63     | Expr • AND Expr
   64     | Expr • LT Expr
   65     | Expr • GT Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • LE Expr
   69     | Expr • GE Expr
   70     | Expr • PLUS Expr
   71     | Expr • MINUS Expr
   72     | Expr • STAR Expr
   73     | Expr • DIV Expr
   73     | Expr DIV Expr •
   74     | Expr • MOD Expr

    $default  reduce using rule 73 (Expr)


State 126

   62 Expr: Expr • OR Expr
   63     | Expr • AND Expr
   64     | Expr • LT Expr
   65     | Expr • GT Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • LE Expr
   69     | Expr • GE Expr
   70     | Expr • PLUS Expr
   71     | Expr • MINUS Expr
   71     | Expr MINUS Expr •
   72     | Expr • STAR Expr
   73     | Expr • DIV Expr
   74     | Expr • MOD Expr

    STAR  shift, and go to state 96
    DIV   shift, and go to state 97
    MOD   shift, and go to state 105

    $default  reduce using rule 71 (Expr)


State 127

   62 Expr: Expr • OR Expr
   63     | Expr • AND Expr
   64     | Expr • LT Expr
   65     | Expr • GT Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • LE Expr
   69     | Expr • GE Expr
   70     | Expr • PLUS Expr
   70     | Expr PLUS Expr •
   71     | Expr • MINUS Expr
   72     | Expr • STAR Expr
   73     | Expr • DIV Expr
   74     | Expr • MOD Expr

    STAR  shift, and go to state 96
    DIV   shift, and go to state 97
    MOD   shift, and go to state 105

    $default  reduce using rule 70 (Expr)


State 128

   62 Expr: Expr • OR Expr
   63     | Expr • AND Expr
   64     | Expr • LT Expr
   65     | Expr • GT Expr
   66     | Expr • EQ Expr
   66     | Expr EQ Expr •
   67     | Expr • NE Expr
   68     | Expr • LE Expr
   69     | Expr • GE Expr
   70     | Expr • PLUS Expr
   71     | Expr • MINUS Expr
   72     | Expr • STAR Expr
   73     | Expr • DIV Expr
   74     | Expr • MOD Expr

    STAR   shift, and go to state 96
    DIV    shift, and go to state 97
    MINUS  shift, and go to state 98
    PLUS   shift, and go to state 99
    MOD    shift, and go to state 105

    $default  reduce using rule 66 (Expr)


State 129

   62 Expr: Expr • OR Expr
   63     | Expr • AND Expr
   64     | Expr • LT Expr
   65     | Expr • GT Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • LE Expr
   69     | Expr • GE Expr
   69     | Expr GE Expr •
   70     | Expr • PLUS Expr
   71     | Expr • MINUS Expr
   72     | Expr • STAR Expr
   73     | Expr • DIV Expr
   74     | Expr • MOD Expr

    STAR   shift, and go to state 96
    DIV    shift, and go to state 97
    MINUS  shift, and go to state 98
    PLUS   shift, and go to state 99
    MOD    shift, and go to state 105

    $default  reduce using rule 69 (Expr)


State 130

   62 Expr: Expr • OR Expr
   63     | Expr • AND Expr
   64     | Expr • LT Expr
   65     | Expr • GT Expr
   65     | Expr GT Expr •
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • LE Expr
   69     | Expr • GE Expr
   70     | Expr • PLUS Expr
   71     | Expr • MINUS Expr
   72     | Expr • STAR Expr
   73     | Expr • DIV Expr
   74     | Expr • MOD Expr

    STAR   shift, and go to state 96
    DIV    shift, and go to state 97
    MINUS  shift, and go to state 98
    PLUS   shift, and go to state 99
    MOD    shift, and go to state 105

    $default  reduce using rule 65 (Expr)


State 131

   62 Expr: Expr • OR Expr
   63     | Expr • AND Expr
   64     | Expr • LT Expr
   65     | Expr • GT Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • LE Expr
   68     | Expr LE Expr •
   69     | Expr • GE Expr
   70     | Expr • PLUS Expr
   71     | Expr • MINUS Expr
   72     | Expr • STAR Expr
   73     | Expr • DIV Expr
   74     | Expr • MOD Expr

    STAR   shift, and go to state 96
    DIV    shift, and go to state 97
    MINUS  shift, and go to state 98
    PLUS   shift, and go to state 99
    MOD    shift, and go to state 105

    $default  reduce using rule 68 (Expr)


State 132

   62 Expr: Expr • OR Expr
   63     | Expr • AND Expr
   64     | Expr • LT Expr
   64     | Expr LT Expr •
   65     | Expr • GT Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • LE Expr
   69     | Expr • GE Expr
   70     | Expr • PLUS Expr
   71     | Expr • MINUS Expr
   72     | Expr • STAR Expr
   73     | Expr • DIV Expr
   74     | Expr • MOD Expr

    STAR   shift, and go to state 96
    DIV    shift, and go to state 97
    MINUS  shift, and go to state 98
    PLUS   shift, and go to state 99
    MOD    shift, and go to state 105

    $default  reduce using rule 64 (Expr)


State 133

   62 Expr: Expr • OR Expr
   63     | Expr • AND Expr
   64     | Expr • LT Expr
   65     | Expr • GT Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • LE Expr
   69     | Expr • GE Expr
   70     | Expr • PLUS Expr
   71     | Expr • MINUS Expr
   72     | Expr • STAR Expr
   73     | Expr • DIV Expr
   74     | Expr • MOD Expr
   74     | Expr MOD Expr •

    $default  reduce using rule 74 (Expr)


State 134

   62 Expr: Expr • OR Expr
   63     | Expr • AND Expr
   64     | Expr • LT Expr
   65     | Expr • GT Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   67     | Expr NE Expr •
   68     | Expr • LE Expr
   69     | Expr • GE Expr
   70     | Expr • PLUS Expr
   71     | Expr • MINUS Expr
   72     | Expr • STAR Expr
   73     | Expr • DIV Expr
   74     | Expr • MOD Expr

    STAR   shift, and go to state 96
    DIV    shift, and go to state 97
    MINUS  shift, and go to state 98
    PLUS   shift, and go to state 99
    MOD    shift, and go to state 105

    $default  reduce using rule 67 (Expr)


State 135

   62 Expr: Expr • OR Expr
   63     | Expr • AND Expr
   63     | Expr AND Expr •
   64     | Expr • LT Expr
   65     | Expr • GT Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • LE Expr
   69     | Expr • GE Expr
   70     | Expr • PLUS Expr
   71     | Expr • MINUS Expr
   72     | Expr • STAR Expr
   73     | Expr • DIV Expr
   74     | Expr • MOD Expr

    STAR   shift, and go to state 96
    DIV    shift, and go to state 97
    MINUS  shift, and go to state 98
    PLUS   shift, and go to state 99
    EQ     shift, and go to state 100
    GE     shift, and go to state 101
    GT     shift, and go to state 102
    LE     shift, and go to state 103
    LT     shift, and go to state 104
    MOD    shift, and go to state 105
    NE     shift, and go to state 106

    $default  reduce using rule 63 (Expr)


State 136

   62 Expr: Expr • OR Expr
   62     | Expr OR Expr •
   63     | Expr • AND Expr
   64     | Expr • LT Expr
   65     | Expr • GT Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • LE Expr
   69     | Expr • GE Expr
   70     | Expr • PLUS Expr
   71     | Expr • MINUS Expr
   72     | Expr • STAR Expr
   73     | Expr • DIV Expr
   74     | Expr • MOD Expr

    STAR   shift, and go to state 96
    DIV    shift, and go to state 97
    MINUS  shift, and go to state 98
    PLUS   shift, and go to state 99
    EQ     shift, and go to state 100
    GE     shift, and go to state 101
    GT     shift, and go to state 102
    LE     shift, and go to state 103
    LT     shift, and go to state 104
    MOD    shift, and go to state 105
    NE     shift, and go to state 106
    AND    shift, and go to state 107

    $default  reduce using rule 62 (Expr)


State 137

   49 Statement: PRINT LPAR STRLIT RPAR •

    $default  reduce using rule 49 (Statement)


State 138

   48 Statement: PRINT LPAR Expr RPAR •

    $default  reduce using rule 48 (Statement)


State 139

   34 Statement: IF Expr LBRACE RBRACE •
   36          | IF Expr LBRACE RBRACE • ELSE LBRACE RBRACE
   38          | IF Expr LBRACE RBRACE • ELSE LBRACE StatementList RBRACE

    ELSE  shift, and go to state 149

    $default  reduce using rule 34 (Statement)


State 140

   35 Statement: IF Expr LBRACE StatementList • RBRACE
   37          | IF Expr LBRACE StatementList • RBRACE ELSE LBRACE RBRACE
   39          | IF Expr LBRACE StatementList • RBRACE ELSE LBRACE StatementList RBRACE
   51 StatementList: StatementList • Statement SEMICOLON

    error   shift, and go to state 50
    LBRACE  shift, and go to state 52
    RBRACE  shift, and go to state 150
    RETURN  shift, and go to state 54
    PRINT   shift, and go to state 55
    IF      shift, and go to state 56
    FOR     shift, and go to state 57
    ID      shift, and go to state 58

    Statement       go to state 90
    ParseArgs       go to state 61
    FuncID          go to state 62
    FuncInvocation  go to state 63


State 141

   41 Statement: FOR LBRACE StatementList RBRACE •

    $default  reduce using rule 41 (Statement)


State 142

   42 Statement: FOR Expr LBRACE RBRACE •

    $default  reduce using rule 42 (Statement)


State 143

   43 Statement: FOR Expr LBRACE StatementList • RBRACE
   51 StatementList: StatementList • Statement SEMICOLON

    error   shift, and go to state 50
    LBRACE  shift, and go to state 52
    RBRACE  shift, and go to state 151
    RETURN  shift, and go to state 54
    PRINT   shift, and go to state 55
    IF      shift, and go to state 56
    FOR     shift, and go to state 57
    ID      shift, and go to state 58

    Statement       go to state 90
    ParseArgs       go to state 61
    FuncID          go to state 62
    FuncInvocation  go to state 63


State 144

   53 ParseArgs: ID COMMA BLANKID ASSIGN • PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   54          | ID COMMA BLANKID ASSIGN • PARSEINT LPAR error RPAR

    PARSEINT  shift, and go to state 152


State 145

   59 FuncInvocation: FuncID LPAR error RPAR •

    $default  reduce using rule 59 (FuncInvocation)


State 146

   61 CommaExpressionList: COMMA • Expr

    MINUS    shift, and go to state 69
    PLUS     shift, and go to state 70
    NOT      shift, and go to state 71
    LPAR     shift, and go to state 72
    ID       shift, and go to state 73
    INTLIT   shift, and go to state 74
    REALLIT  shift, and go to state 75

    FuncID          go to state 62
    FuncInvocation  go to state 76
    Expr            go to state 153


State 147

   57 FuncInvocation: FuncID LPAR Expr RPAR •

    $default  reduce using rule 57 (FuncInvocation)


State 148

   58 FuncInvocation: FuncID LPAR Expr CommaExpressionList • RPAR
   60 CommaExpressionList: CommaExpressionList • COMMA Expr

    COMMA  shift, and go to state 154
    RPAR   shift, and go to state 155


State 149

   36 Statement: IF Expr LBRACE RBRACE ELSE • LBRACE RBRACE
   38          | IF Expr LBRACE RBRACE ELSE • LBRACE StatementList RBRACE

    LBRACE  shift, and go to state 156


State 150

   35 Statement: IF Expr LBRACE StatementList RBRACE •
   37          | IF Expr LBRACE StatementList RBRACE • ELSE LBRACE RBRACE
   39          | IF Expr LBRACE StatementList RBRACE • ELSE LBRACE StatementList RBRACE

    ELSE  shift, and go to state 157

    $default  reduce using rule 35 (Statement)


State 151

   43 Statement: FOR Expr LBRACE StatementList RBRACE •

    $default  reduce using rule 43 (Statement)


State 152

   53 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT • LPAR CMDARGS LSQ Expr RSQ RPAR
   54          | ID COMMA BLANKID ASSIGN PARSEINT • LPAR error RPAR

    LPAR  shift, and go to state 158


State 153

   61 CommaExpressionList: COMMA Expr •
   62 Expr: Expr • OR Expr
   63     | Expr • AND Expr
   64     | Expr • LT Expr
   65     | Expr • GT Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • LE Expr
   69     | Expr • GE Expr
   70     | Expr • PLUS Expr
   71     | Expr • MINUS Expr
   72     | Expr • STAR Expr
   73     | Expr • DIV Expr
   74     | Expr • MOD Expr

    STAR   shift, and go to state 96
    DIV    shift, and go to state 97
    MINUS  shift, and go to state 98
    PLUS   shift, and go to state 99
    EQ     shift, and go to state 100
    GE     shift, and go to state 101
    GT     shift, and go to state 102
    LE     shift, and go to state 103
    LT     shift, and go to state 104
    MOD    shift, and go to state 105
    NE     shift, and go to state 106
    AND    shift, and go to state 107
    OR     shift, and go to state 108

    $default  reduce using rule 61 (CommaExpressionList)


State 154

   60 CommaExpressionList: CommaExpressionList COMMA • Expr

    MINUS    shift, and go to state 69
    PLUS     shift, and go to state 70
    NOT      shift, and go to state 71
    LPAR     shift, and go to state 72
    ID       shift, and go to state 73
    INTLIT   shift, and go to state 74
    REALLIT  shift, and go to state 75

    FuncID          go to state 62
    FuncInvocation  go to state 76
    Expr            go to state 159


State 155

   58 FuncInvocation: FuncID LPAR Expr CommaExpressionList RPAR •

    $default  reduce using rule 58 (FuncInvocation)


State 156

   36 Statement: IF Expr LBRACE RBRACE ELSE LBRACE • RBRACE
   38          | IF Expr LBRACE RBRACE ELSE LBRACE • StatementList RBRACE

    error   shift, and go to state 50
    LBRACE  shift, and go to state 52
    RBRACE  shift, and go to state 160
    RETURN  shift, and go to state 54
    PRINT   shift, and go to state 55
    IF      shift, and go to state 56
    FOR     shift, and go to state 57
    ID      shift, and go to state 58

    Statement       go to state 67
    StatementList   go to state 161
    ParseArgs       go to state 61
    FuncID          go to state 62
    FuncInvocation  go to state 63


State 157

   37 Statement: IF Expr LBRACE StatementList RBRACE ELSE • LBRACE RBRACE
   39          | IF Expr LBRACE StatementList RBRACE ELSE • LBRACE StatementList RBRACE

    LBRACE  shift, and go to state 162


State 158

   53 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR • CMDARGS LSQ Expr RSQ RPAR
   54          | ID COMMA BLANKID ASSIGN PARSEINT LPAR • error RPAR

    error    shift, and go to state 163
    CMDARGS  shift, and go to state 164


State 159

   60 CommaExpressionList: CommaExpressionList COMMA Expr •
   62 Expr: Expr • OR Expr
   63     | Expr • AND Expr
   64     | Expr • LT Expr
   65     | Expr • GT Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • LE Expr
   69     | Expr • GE Expr
   70     | Expr • PLUS Expr
   71     | Expr • MINUS Expr
   72     | Expr • STAR Expr
   73     | Expr • DIV Expr
   74     | Expr • MOD Expr

    STAR   shift, and go to state 96
    DIV    shift, and go to state 97
    MINUS  shift, and go to state 98
    PLUS   shift, and go to state 99
    EQ     shift, and go to state 100
    GE     shift, and go to state 101
    GT     shift, and go to state 102
    LE     shift, and go to state 103
    LT     shift, and go to state 104
    MOD    shift, and go to state 105
    NE     shift, and go to state 106
    AND    shift, and go to state 107
    OR     shift, and go to state 108

    $default  reduce using rule 60 (CommaExpressionList)


State 160

   36 Statement: IF Expr LBRACE RBRACE ELSE LBRACE RBRACE •

    $default  reduce using rule 36 (Statement)


State 161

   38 Statement: IF Expr LBRACE RBRACE ELSE LBRACE StatementList • RBRACE
   51 StatementList: StatementList • Statement SEMICOLON

    error   shift, and go to state 50
    LBRACE  shift, and go to state 52
    RBRACE  shift, and go to state 165
    RETURN  shift, and go to state 54
    PRINT   shift, and go to state 55
    IF      shift, and go to state 56
    FOR     shift, and go to state 57
    ID      shift, and go to state 58

    Statement       go to state 90
    ParseArgs       go to state 61
    FuncID          go to state 62
    FuncInvocation  go to state 63


State 162

   37 Statement: IF Expr LBRACE StatementList RBRACE ELSE LBRACE • RBRACE
   39          | IF Expr LBRACE StatementList RBRACE ELSE LBRACE • StatementList RBRACE

    error   shift, and go to state 50
    LBRACE  shift, and go to state 52
    RBRACE  shift, and go to state 166
    RETURN  shift, and go to state 54
    PRINT   shift, and go to state 55
    IF      shift, and go to state 56
    FOR     shift, and go to state 57
    ID      shift, and go to state 58

    Statement       go to state 67
    StatementList   go to state 167
    ParseArgs       go to state 61
    FuncID          go to state 62
    FuncInvocation  go to state 63


State 163

   54 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR error • RPAR

    RPAR  shift, and go to state 168


State 164

   53 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS • LSQ Expr RSQ RPAR

    LSQ  shift, and go to state 169


State 165

   38 Statement: IF Expr LBRACE RBRACE ELSE LBRACE StatementList RBRACE •

    $default  reduce using rule 38 (Statement)


State 166

   37 Statement: IF Expr LBRACE StatementList RBRACE ELSE LBRACE RBRACE •

    $default  reduce using rule 37 (Statement)


State 167

   39 Statement: IF Expr LBRACE StatementList RBRACE ELSE LBRACE StatementList • RBRACE
   51 StatementList: StatementList • Statement SEMICOLON

    error   shift, and go to state 50
    LBRACE  shift, and go to state 52
    RBRACE  shift, and go to state 170
    RETURN  shift, and go to state 54
    PRINT   shift, and go to state 55
    IF      shift, and go to state 56
    FOR     shift, and go to state 57
    ID      shift, and go to state 58

    Statement       go to state 90
    ParseArgs       go to state 61
    FuncID          go to state 62
    FuncInvocation  go to state 63


State 168

   54 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR •

    $default  reduce using rule 54 (ParseArgs)


State 169

   53 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ • Expr RSQ RPAR

    MINUS    shift, and go to state 69
    PLUS     shift, and go to state 70
    NOT      shift, and go to state 71
    LPAR     shift, and go to state 72
    ID       shift, and go to state 73
    INTLIT   shift, and go to state 74
    REALLIT  shift, and go to state 75

    FuncID          go to state 62
    FuncInvocation  go to state 76
    Expr            go to state 171


State 170

   39 Statement: IF Expr LBRACE StatementList RBRACE ELSE LBRACE StatementList RBRACE •

    $default  reduce using rule 39 (Statement)


State 171

   53 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr • RSQ RPAR
   62 Expr: Expr • OR Expr
   63     | Expr • AND Expr
   64     | Expr • LT Expr
   65     | Expr • GT Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • LE Expr
   69     | Expr • GE Expr
   70     | Expr • PLUS Expr
   71     | Expr • MINUS Expr
   72     | Expr • STAR Expr
   73     | Expr • DIV Expr
   74     | Expr • MOD Expr

    STAR   shift, and go to state 96
    DIV    shift, and go to state 97
    MINUS  shift, and go to state 98
    PLUS   shift, and go to state 99
    EQ     shift, and go to state 100
    GE     shift, and go to state 101
    GT     shift, and go to state 102
    LE     shift, and go to state 103
    LT     shift, and go to state 104
    MOD    shift, and go to state 105
    NE     shift, and go to state 106
    AND    shift, and go to state 107
    OR     shift, and go to state 108
    RSQ    shift, and go to state 172


State 172

   53 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ • RPAR

    RPAR  shift, and go to state 173


State 173

   53 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR •

    $default  reduce using rule 53 (ParseArgs)
